// <auto-generated />
using Contrado.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Contrado.Data.Migrations
{
    [DbContext(typeof(ECommerceDBContext))]
    [Migration("20200613055533_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Contrado.Core.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProdCatId")
                        .HasColumnType("int");

                    b.Property<string>("ProdDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("ProductId");

                    b.HasIndex("ProdCatId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Contrado.Core.Models.ProductAttribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("Contrado.Core.Models.ProductAttributeLookup", b =>
                {
                    b.Property<int>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("ProdCatId")
                        .HasColumnType("int");

                    b.HasKey("AttributeId");

                    b.HasIndex("ProdCatId");

                    b.ToTable("ProductAttributeLookups");
                });

            modelBuilder.Entity("Contrado.Core.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProdCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("ProdCatId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Contrado.Core.Models.Product", b =>
                {
                    b.HasOne("Contrado.Core.Models.ProductCategory", "ProductCategory")
                        .WithMany("Product")
                        .HasForeignKey("ProdCatId")
                        .HasConstraintName("FK_Product_ProductCategory")
                        .IsRequired();
                });

            modelBuilder.Entity("Contrado.Core.Models.ProductAttribute", b =>
                {
                    b.HasOne("Contrado.Core.Models.ProductAttributeLookup", "AttributeLookup")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .HasConstraintName("FK_ProductAttribute_ProductAttributeLookup")
                        .IsRequired();

                    b.HasOne("Contrado.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductAttribute_Product")
                        .IsRequired();
                });

            modelBuilder.Entity("Contrado.Core.Models.ProductAttributeLookup", b =>
                {
                    b.HasOne("Contrado.Core.Models.ProductCategory", "ProductCategory")
                        .WithMany("ProductAttributeLookup")
                        .HasForeignKey("ProdCatId")
                        .HasConstraintName("FK_ProductAttributeLookup_ProductCategory")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
